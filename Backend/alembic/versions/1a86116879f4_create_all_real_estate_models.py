"""Create all real estate models

Revision ID: 1a86116879f4
Revises: f8a98fd955b0
Create Date: 2025-06-27 20:07:00.701594

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1a86116879f4'
down_revision = 'f8a98fd955b0'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('developers',
    sa.Column('user_id', sa.UUID(), nullable=False, comment='FK to User'),
    sa.Column('company_name', sa.String(length=255), nullable=False, comment='Company name'),
    sa.Column('legal_name', sa.String(length=255), nullable=False, comment='Legal company name'),
    sa.Column('inn', sa.String(length=12), nullable=False, comment='INN number (unique)'),
    sa.Column('ogrn', sa.String(length=15), nullable=False, comment='OGRN number'),
    sa.Column('legal_address', sa.Text(), nullable=False, comment='Legal address'),
    sa.Column('contact_phone', sa.String(length=20), nullable=False, comment='Contact phone number'),
    sa.Column('contact_email', sa.String(length=254), nullable=False, comment='Contact email'),
    sa.Column('website', sa.String(length=500), nullable=True, comment='Company website'),
    sa.Column('description', sa.Text(), nullable=True, comment='Company description'),
    sa.Column('logo_url', sa.String(length=500), nullable=True, comment='Company logo URL'),
    sa.Column('rating', sa.Numeric(precision=3, scale=2), nullable=False, comment='Average rating 0-5'),
    sa.Column('reviews_count', sa.Integer(), nullable=False, comment='Number of reviews'),
    sa.Column('is_verified', sa.Boolean(), nullable=False, comment='Passed verification'),
    sa.Column('verification_status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', name='verificationstatus'), nullable=False, comment='Verification status'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record last update timestamp'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_developers_company_name'), 'developers', ['company_name'], unique=False)
    op.create_index(op.f('ix_developers_inn'), 'developers', ['inn'], unique=True)
    op.create_table('search_history',
    sa.Column('user_id', sa.UUID(), nullable=True, comment='FK to User (may be null for anonymous)'),
    sa.Column('session_id', sa.String(length=255), nullable=False, comment='Session ID for anonymous users'),
    sa.Column('search_query', sa.Text(), nullable=False, comment='Search query text'),
    sa.Column('filters', sa.JSON(), nullable=False, comment='Applied filters as JSON'),
    sa.Column('results_count', sa.Integer(), nullable=False, comment='Number of search results'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record last update timestamp'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_search_history_session_id'), 'search_history', ['session_id'], unique=False)
    op.create_index(op.f('ix_search_history_user_id'), 'search_history', ['user_id'], unique=False)
    op.create_table('properties',
    sa.Column('developer_id', sa.UUID(), nullable=False, comment='FK to Developer'),
    sa.Column('title', sa.String(length=255), nullable=False, comment='Property title'),
    sa.Column('description', sa.Text(), nullable=False, comment='Property description'),
    sa.Column('property_type', sa.Enum('APARTMENT', 'HOUSE', 'COMMERCIAL', name='propertytype'), nullable=False, comment='Property type'),
    sa.Column('deal_type', sa.Enum('SALE', 'RENT', name='dealtype'), nullable=False, comment='Deal type'),
    sa.Column('price', sa.Numeric(precision=15, scale=2), nullable=False, comment='Price in rubles'),
    sa.Column('price_per_sqm', sa.Numeric(precision=10, scale=2), nullable=True, comment='Price per square meter'),
    sa.Column('currency', sa.String(length=3), nullable=False, comment='Currency code'),
    sa.Column('region', sa.String(length=100), nullable=False, comment='Region'),
    sa.Column('city', sa.String(length=100), nullable=False, comment='City'),
    sa.Column('district', sa.String(length=100), nullable=True, comment='District'),
    sa.Column('street', sa.String(length=255), nullable=False, comment='Street'),
    sa.Column('house_number', sa.String(length=50), nullable=False, comment='House number'),
    sa.Column('apartment_number', sa.String(length=50), nullable=True, comment='Apartment number'),
    sa.Column('postal_code', sa.String(length=10), nullable=True, comment='Postal code'),
    sa.Column('latitude', sa.Float(), nullable=True, comment='Latitude'),
    sa.Column('longitude', sa.Float(), nullable=True, comment='Longitude'),
    sa.Column('total_area', sa.Float(), nullable=True, comment='Total area in square meters'),
    sa.Column('living_area', sa.Float(), nullable=True, comment='Living area in square meters'),
    sa.Column('kitchen_area', sa.Float(), nullable=True, comment='Kitchen area in square meters'),
    sa.Column('rooms_count', sa.Integer(), nullable=True, comment='Number of rooms'),
    sa.Column('bedrooms_count', sa.Integer(), nullable=True, comment='Number of bedrooms'),
    sa.Column('bathrooms_count', sa.Integer(), nullable=True, comment='Number of bathrooms'),
    sa.Column('floor', sa.Integer(), nullable=True, comment='Floor number'),
    sa.Column('total_floors', sa.Integer(), nullable=True, comment='Total floors in building'),
    sa.Column('building_year', sa.Integer(), nullable=True, comment='Building construction year'),
    sa.Column('ceiling_height', sa.Float(), nullable=True, comment='Ceiling height in meters'),
    sa.Column('has_balcony', sa.Boolean(), nullable=False, comment='Has balcony'),
    sa.Column('has_loggia', sa.Boolean(), nullable=False, comment='Has loggia'),
    sa.Column('has_elevator', sa.Boolean(), nullable=False, comment='Has elevator'),
    sa.Column('has_parking', sa.Boolean(), nullable=False, comment='Has parking'),
    sa.Column('has_furniture', sa.Boolean(), nullable=False, comment='Has furniture'),
    sa.Column('renovation_type', sa.Enum('NONE', 'COSMETIC', 'EURO', 'DESIGNER', name='renovationtype'), nullable=True, comment='Renovation type'),
    sa.Column('status', sa.Enum('DRAFT', 'ACTIVE', 'SOLD', 'RENTED', 'ARCHIVED', name='propertystatus'), nullable=False, comment='Property status'),
    sa.Column('is_featured', sa.Boolean(), nullable=False, comment='Featured property'),
    sa.Column('views_count', sa.Integer(), nullable=False, comment='Number of views'),
    sa.Column('favorites_count', sa.Integer(), nullable=False, comment='Number of favorites'),
    sa.Column('available_from', sa.Date(), nullable=True, comment='Available from date'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record last update timestamp'),
    sa.ForeignKeyConstraint(['developer_id'], ['developers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_properties_city'), 'properties', ['city'], unique=False)
    op.create_index(op.f('ix_properties_deal_type'), 'properties', ['deal_type'], unique=False)
    op.create_index(op.f('ix_properties_developer_id'), 'properties', ['developer_id'], unique=False)
    op.create_index(op.f('ix_properties_has_parking'), 'properties', ['has_parking'], unique=False)
    op.create_index(op.f('ix_properties_is_featured'), 'properties', ['is_featured'], unique=False)
    op.create_index(op.f('ix_properties_price'), 'properties', ['price'], unique=False)
    op.create_index(op.f('ix_properties_property_type'), 'properties', ['property_type'], unique=False)
    op.create_index(op.f('ix_properties_region'), 'properties', ['region'], unique=False)
    op.create_index(op.f('ix_properties_rooms_count'), 'properties', ['rooms_count'], unique=False)
    op.create_index(op.f('ix_properties_status'), 'properties', ['status'], unique=False)
    op.create_index(op.f('ix_properties_title'), 'properties', ['title'], unique=False)
    op.create_table('favorites',
    sa.Column('user_id', sa.UUID(), nullable=False, comment='FK to User'),
    sa.Column('property_id', sa.UUID(), nullable=False, comment='FK to Property'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record last update timestamp'),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'property_id', name='uq_user_property_favorite')
    )
    op.create_index(op.f('ix_favorites_property_id'), 'favorites', ['property_id'], unique=False)
    op.create_index(op.f('ix_favorites_user_id'), 'favorites', ['user_id'], unique=False)
    op.create_table('leads',
    sa.Column('property_id', sa.UUID(), nullable=False, comment='FK to Property'),
    sa.Column('user_id', sa.UUID(), nullable=True, comment='FK to User (may be null for anonymous)'),
    sa.Column('name', sa.String(length=255), nullable=False, comment='Contact name'),
    sa.Column('phone', sa.String(length=20), nullable=False, comment='Contact phone'),
    sa.Column('email', sa.String(length=254), nullable=True, comment='Contact email'),
    sa.Column('message', sa.Text(), nullable=True, comment='Lead message'),
    sa.Column('lead_type', sa.Enum('CALL_REQUEST', 'VIEWING', 'CONSULTATION', name='leadtype'), nullable=False, comment='Lead type'),
    sa.Column('status', sa.Enum('NEW', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', name='leadstatus'), nullable=False, comment='Lead status'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record last update timestamp'),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_leads_property_id'), 'leads', ['property_id'], unique=False)
    op.create_index(op.f('ix_leads_status'), 'leads', ['status'], unique=False)
    op.create_index(op.f('ix_leads_user_id'), 'leads', ['user_id'], unique=False)
    op.create_table('property_documents',
    sa.Column('property_id', sa.UUID(), nullable=False, comment='FK to Property'),
    sa.Column('document_type', sa.Enum('PLAN', 'CERTIFICATE', 'CONTRACT', 'OTHER', name='documenttype'), nullable=False, comment='Document type'),
    sa.Column('title', sa.String(length=255), nullable=False, comment='Document title'),
    sa.Column('file_url', sa.String(length=500), nullable=False, comment='File URL'),
    sa.Column('file_size', sa.Integer(), nullable=False, comment='File size in bytes'),
    sa.Column('mime_type', sa.String(length=100), nullable=False, comment='MIME type'),
    sa.Column('is_verified', sa.Boolean(), nullable=False, comment='Is document verified'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record last update timestamp'),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_property_documents_property_id'), 'property_documents', ['property_id'], unique=False)
    op.create_table('property_images',
    sa.Column('property_id', sa.UUID(), nullable=False, comment='FK to Property'),
    sa.Column('url', sa.String(length=500), nullable=False, comment='Image URL'),
    sa.Column('title', sa.String(length=255), nullable=True, comment='Image description'),
    sa.Column('is_main', sa.Boolean(), nullable=False, comment='Is main image'),
    sa.Column('order', sa.Integer(), nullable=False, comment='Display order'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record last update timestamp'),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_property_images_property_id'), 'property_images', ['property_id'], unique=False)
    op.create_table('reviews',
    sa.Column('user_id', sa.UUID(), nullable=False, comment='FK to User'),
    sa.Column('developer_id', sa.UUID(), nullable=False, comment='FK to Developer'),
    sa.Column('property_id', sa.UUID(), nullable=True, comment='FK to Property (optional)'),
    sa.Column('rating', sa.Integer(), nullable=False, comment='Rating 1-5'),
    sa.Column('title', sa.String(length=255), nullable=False, comment='Review title'),
    sa.Column('content', sa.Text(), nullable=False, comment='Review content'),
    sa.Column('is_verified', sa.Boolean(), nullable=False, comment='Verified by moderator'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record last update timestamp'),
    sa.ForeignKeyConstraint(['developer_id'], ['developers.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reviews_developer_id'), 'reviews', ['developer_id'], unique=False)
    op.create_index(op.f('ix_reviews_property_id'), 'reviews', ['property_id'], unique=False)
    op.create_index(op.f('ix_reviews_user_id'), 'reviews', ['user_id'], unique=False)
    op.create_table('view_history',
    sa.Column('user_id', sa.UUID(), nullable=True, comment='FK to User'),
    sa.Column('property_id', sa.UUID(), nullable=False, comment='FK to Property'),
    sa.Column('session_id', sa.String(length=255), nullable=False, comment='Session ID'),
    sa.Column('ip_address', sa.String(length=45), nullable=False, comment='IP address'),
    sa.Column('user_agent', sa.String(length=500), nullable=True, comment='User agent string'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Record last update timestamp'),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_view_history_property_id'), 'view_history', ['property_id'], unique=False)
    op.create_index(op.f('ix_view_history_session_id'), 'view_history', ['session_id'], unique=False)
    op.create_index(op.f('ix_view_history_user_id'), 'view_history', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_view_history_user_id'), table_name='view_history')
    op.drop_index(op.f('ix_view_history_session_id'), table_name='view_history')
    op.drop_index(op.f('ix_view_history_property_id'), table_name='view_history')
    op.drop_table('view_history')
    op.drop_index(op.f('ix_reviews_user_id'), table_name='reviews')
    op.drop_index(op.f('ix_reviews_property_id'), table_name='reviews')
    op.drop_index(op.f('ix_reviews_developer_id'), table_name='reviews')
    op.drop_table('reviews')
    op.drop_index(op.f('ix_property_images_property_id'), table_name='property_images')
    op.drop_table('property_images')
    op.drop_index(op.f('ix_property_documents_property_id'), table_name='property_documents')
    op.drop_table('property_documents')
    op.drop_index(op.f('ix_leads_user_id'), table_name='leads')
    op.drop_index(op.f('ix_leads_status'), table_name='leads')
    op.drop_index(op.f('ix_leads_property_id'), table_name='leads')
    op.drop_table('leads')
    op.drop_index(op.f('ix_favorites_user_id'), table_name='favorites')
    op.drop_index(op.f('ix_favorites_property_id'), table_name='favorites')
    op.drop_table('favorites')
    op.drop_index(op.f('ix_properties_title'), table_name='properties')
    op.drop_index(op.f('ix_properties_status'), table_name='properties')
    op.drop_index(op.f('ix_properties_rooms_count'), table_name='properties')
    op.drop_index(op.f('ix_properties_region'), table_name='properties')
    op.drop_index(op.f('ix_properties_property_type'), table_name='properties')
    op.drop_index(op.f('ix_properties_price'), table_name='properties')
    op.drop_index(op.f('ix_properties_is_featured'), table_name='properties')
    op.drop_index(op.f('ix_properties_has_parking'), table_name='properties')
    op.drop_index(op.f('ix_properties_developer_id'), table_name='properties')
    op.drop_index(op.f('ix_properties_deal_type'), table_name='properties')
    op.drop_index(op.f('ix_properties_city'), table_name='properties')
    op.drop_table('properties')
    op.drop_index(op.f('ix_search_history_user_id'), table_name='search_history')
    op.drop_index(op.f('ix_search_history_session_id'), table_name='search_history')
    op.drop_table('search_history')
    op.drop_index(op.f('ix_developers_inn'), table_name='developers')
    op.drop_index(op.f('ix_developers_company_name'), table_name='developers')
    op.drop_table('developers')
    # ### end Alembic commands ###
